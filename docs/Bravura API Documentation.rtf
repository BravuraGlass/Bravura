{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red17\green85\blue204;\red34\green34\blue34;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw15840\paperh24480\margl1440\margr1440\vieww16140\viewh13420\viewkind1
\deftab720
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\f0\b\fs22 \cf0 Bravura API Documentation\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
test server : bravura-crm.herokuapp.com\
Production server : bravura-crm.com\
\
Admin access to test server (website version)\uc0\u8232 Email : \cf2 \ul \ulc2 admin@admin.com\cf0 \ulnone \uc0\u8232 Password : admin\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 1. Login\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
Request \
\
 POST /sessions/create.json\
\
params\
\
- email \
- password\
\
Response\
\
success\
\
\{\
    "status": "success",\
    "data": \{\
        "access_id": 2,\
        "access_token": "ca6e3ab7-cb6c-494a-bff8-c91d1b018f8b",\
        "email": "admin@admin.com",\
        "first_name": "admin",\
        "last_name": "admin",\
        "phonenumber": "555 555 5555",\
        "address": "admin address",\
        \'93type_of_user\'94: \'93Field Worker\'94\
    \},\
    "message": null\
\}\
\
failed\
\
\{\
    "status": "failed",\
    "data": null,\
    "message": "Email, password was invalid or access token has expired"\
\}\
\
\
Notes :\
\pard\tx360\tx720\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls1\ilvl0\cf0 1.	access_id and access_token will be used on every API requests\
2.	valid data email and password for test server are \'93admin@admin.com\'94 with password \'93admin\'94\
3.	posible type of user values are \'93System Administrator\'94, \'93Sales Representative\'94, \'93Field Worker\'94\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 2. Update product status via single barcode\uc0\u8232 \u8232 Get the valid statuses\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Request :\
\
GET /update_status/\{id\}.json
\b \

\b0 \uc0\u8232 Params : \
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- id : product section id, scanning from the barcode, information from barcode contains url, to make request to the api simply add suffix .json into it\
\
Response :\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "section_name": "1-dining room-1A",\u8232     "status": "in fabrication",\u8232     "product_statuses": [\u8232       \{\u8232         "id": 6,\u8232         "name": "in fabrication"\u8232       \},\u8232       \{\u8232         "id": 7,\u8232         "name": "installed"\u8232       \}\u8232     ]\u8232   \}\u8232 \}\
\
section_name : room name in the building (hotel etc), each barcode represent each section \
status : current status, if it isn\'92t updated yet, the value is null\
product statuses : list of valid product statutes for this section, later user need to pick one to update the status of the section\uc0\u8232 \u8232 
\b Update product statuses\
\

\b0 Request :\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 POST /edit_section_status/\{id\}.json\
\
Params : \
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- id : product section id\
- new_status : status name that user picked/clicked\uc0\u8232 \u8232 Response :\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "id": 1,\u8232     "section_name": "1-dining room-1A",\u8232     "status": "installed"\u8232   \}\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 3. Update product status via multiple barcode \
\
Get valid statuses\uc0\u8232 \u8232 
\b0 The API for get valid statuses is the same with no 2, you only need id from the first barcode\
\

\b Update product statuses\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Request :\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 POST /edit_section_status/multiple.json\
\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- ids : string of product section id, using comma as separated value (eg 22, 33, 44), these values come from scanning of barcode\
- new_status : status name that user picked/clicked\uc0\u8232 \u8232 Response :\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": [\u8232     \{\u8232       "id": 1,\u8232       "section_name": "1-dining room-1A",\u8232       "status": "installed"\u8232     \},\u8232     \{\u8232       "id": 3,\u8232       "section_name": "1-dining room-1C",\u8232       "status": "installed"\u8232     \}\u8232   ]\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 4. Checkin/checkout API\uc0\u8232 \u8232 
\b0 Once a user checked in/checked out, app won\'92t allow them to do that again at the same day\
\
however for test purpose you can destroy WorkingLogs data by access this url \cf2 \ul \ulc2 https://bravura-crm.herokuapp.com/working_logs/destroy_all\cf0 \ulnone \
\
so you can check in/check out again, keep in mind this won\'92t work on production, only work at test (heroku) or local server\uc0\u8232 \u8232 
\b Checkin manually\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Request :\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 POST /working_logs/checkin.json\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- longitude : user\'92s location\uc0\u8232 - latitude : user\'92s location\
\
Response : \
\
valid\uc0\u8232 \u8232  "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "user": \{\u8232       "id": 2,\u8232       "first_name": "admin",\u8232       "last_name": "admin"\u8232     \},\u8232     "checkin_time": "\cf3 Monday October 30, 2017 23:15:34 EDT\cf0 ",\uc0\u8232     "checkin_method": "manual"\u8232   \}\u8232 \}\
\
Invalid\
\
\{\uc0\u8232   "status": "failed",\u8232   "message": "invalid, you can't checkin more than once at the same day",\u8232   "data": null\u8232 \}\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 Checkout manually\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Request :\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 POST /working_logs/checkout.json\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\u8232 \u8232 Response :\
\
valid\uc0\u8232 \u8232 \{\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "user": \{\u8232       "id": 2,\u8232       "first_name": "admin",\u8232       "last_name": "admin"\u8232     \},\u8232     "checkout_time": "\cf3 Monday October 30, 2017 23:15:34 EDT\cf0 ",\uc0\u8232     "checkout_method": "manual"\u8232   \}\u8232 \}\
\
Invalid 1\
\
\{\uc0\u8232   "status": "failed",\u8232   "message": "invalid, you can't checkout more than once at the same day",\u8232   "data": null\u8232 \}\
\
Invalid 2\
\
\{\uc0\u8232   "status": "failed",\u8232   "message": "invalid, you can't checkout without checkin first",\u8232   "data": null\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 Automatic Checkin\uc0\u8232 \u8232 
\b0 Automatic checkin will be done by user (employee) via barcode scanning at Bravura\'92s office, thus the API must supply location (longitude and latitude), for test purpose, this is location of Bravura office, latitude 40.618011, longitude -73.932208\uc0\u8232 \u8232 You can generate the barcode at /working_logs/checkin_barcode.png and /working_logs/checkout_barcode.png
\b \uc0\u8232 \u8232 
\b0 Request :\

\b \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 POST /working_logs/checkin.json\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- barcode : string value that comes from scanning the barcode\uc0\u8232 - longitude : user\'92s location\u8232 - latitude : user\'92s location\
\
Response : \
\
Valid\uc0\u8232 \u8232 \{\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "user": \{\u8232       "id": 2,\u8232       "first_name": "admin",\u8232       "last_name": "admin"\u8232     \},\u8232     "checkin_time": "2017-10-27T10:16:10.968Z",\u8232     "checkin_method": "automatic"\u8232   \}\u8232 \}\
\
Invalid 1\
\
\pard\pardeftab720\ri0\sl213\slmult1\sa220\partightenfactor0
\cf3 \{\uc0\u8232   "status": "failed",\u8232   "message": "invalid, you can't checkin more than once at the same day",\u8232   "data": null\u8232 \}\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 Invalid 2\
\
\{\uc0\u8232   "status": "failed",\u8232   "message": "invalid, you didn't scan barcode properly or you do not checkin from office",\u8232   "data": null\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 Automatic Checkout\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 POST /working_logs/checkout.json\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- barcode : string value that comes from scanning the barcode\uc0\u8232 - longitude : user\'92s location\u8232 - latitude : user\'92s location\
\
Valid\uc0\u8232 \u8232 \{\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "user": \{\u8232       "id": 2,\u8232       "first_name": "admin",\u8232       "last_name": "admin"\u8232     \},\u8232     "checkout_time": "2017-10-27T10:16:10.968Z",\u8232     "checkout_method": "automatic"\u8232   \}\u8232 \}\
\
Invalid 1\
\
\pard\pardeftab720\ri0\sl213\slmult1\sa220\partightenfactor0
\cf3 \{\uc0\u8232   "status": "failed",\u8232   "message": "invalid, you can't checkout more than once at the same day",\u8232   "data": null\u8232 \}\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 Invalid 2\
\
\{\uc0\u8232   "status": "failed",\u8232   "message": "invalid, you didn't scan barcode properly or you do not checkout from office",\u8232   "data": null\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 5. Fabrication Order Addresses API\uc0\u8232 \u8232 
\b0 Get list of addresses (it\'92s called title internally) of fabrication order\
\
Request :\

\b \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 GET /fabrication_orders/addresses.json\
\
Params :\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
\
Response :\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": [\u8232     \{\u8232       "id": 1,\
      "po": 1,\uc0\u8232       "address": "Redmond Way, Redmond, WA, USA"\u8232     \},\u8232     \{\u8232       "id": 2,\
      \'93po\'94:3,\uc0\u8232       "address": "Avenue U, Brooklyn, NY, USA"\u8232     \}\u8232   ]\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 6. Room available status API\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Get list of available statuses for rooms\
\
Request : \
\
GET /rooms/available_statuses.json\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
\
Response : \
\
\{\
  "status": "success",\
  "message": null,\
  "data": [\
    "Inactive",\
    "Active"\
  ]\
\}\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 7.  List of Rooms by Fabrication Order API\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Get list of rooms for particular fabrication order (address)\
Request :\
\
GET /fabrication_orders/\{id\}/rooms/list.json\
\
Params :\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- id : fabrication order id that you get from Fabrication Order Addresses API\
\
response\
\
\{\
  "status": "success",\
  "message": null,\
  "data": [\
    \{\
      "id": 32,\
      "name": "101",\
      "status": "Inactive"\
    \},\
    \{\
      "id": 33,\
      "name": "102",\
      "status": "Active"\
    \},\
    \{\
      "id": 34,\
      "name": "103",\
      "status": "Active"\
    \}\
  ]\
\}\
\
\
\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 8. Update room status API\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Request :\uc0\u8232 \u8232 POST : rooms/\{id\}/update_status.json\
\
Params :\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- id : room id that you get from room list API\uc0\u8232 - status : status that user want to change, the valid data come from Room available status API\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Valid response :\uc0\u8232 \u8232 \{\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "id": 32,\u8232     "name": "101",\u8232     "status": "Inactive"\u8232   \}\u8232 \}\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Invalid response\
\
\{\uc0\u8232   "status": "failed",\u8232   "message": "status can't empty",\u8232   "data": null\u8232 \}\
\
\{\uc0\u8232   "status": "failed",\u8232   "message": "status name is invalid",\u8232   "data": null\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 9. List of Tasks by room API\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
Get tasks (it\'92s called product internally) data based on particular room id\
\
Request :\
\
/rooms/\{id\}/products/tasks.json\
\
Params :\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- id : room id that you get from room list API\
\
Response : \
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": [\u8232     \{\u8232       "id": 64,\u8232       "name": "black mirror",\u8232       "status": "Prepared"\u8232     \},\u8232     \{\u8232       "id": 65,\u8232       "name": "round table",\u8232       "status": "Measured"\u8232     \}\u8232   ]\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 10. Tasks available statuses API\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
Get list of available statuses for Tasks\
\
Request : \
\
/products/available_task_statuses.json\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
\
Response :\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": [\u8232     "Prepared",\u8232     "Measured"\u8232   ]\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 11. Update tasks status API\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Request :
\b  \
\

\b0 /products/\{id\}/update_task_status.json\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- id : task/product id, taken from list of tasks by room API\
- status : status name that you want to update\
\
Params :\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Valid response\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "id": 69,\u8232     "name": "new mirror",\u8232     "status": "Prepared"\u8232   \}\u8232 \}\
\
Invalid response\
\
\{\uc0\u8232   "status": "failed",\u8232   "message": "status can't empty",\u8232   "data": null\u8232 \}\
\
\{\uc0\u8232   "status": "failed",\u8232   "message": "status name is invalid",\u8232   "data": null\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 12.   List of Materials by task API\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
Get materials (it\'92s called product section internally) data based on task/product id\
\
Request :\
\
/products/\{id\}/product_sections/materials.json\
\
Params :
\b \

\b0 \
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- id : product/task id that you get from task list API\
\
Response :\
\
\{\
    "status": "success",\
    "message": null,\
    "data": [\
        \{\
            "id": 7,\
            "name": "2-103-1-1",\
            "status": "In Fabrication",\
            "size_type": "oval",\
            "size_a": 100,\
            "fraction_size_a": "",\
            "size_b": 300,\
            "fraction_size_b": "",\
            "edge_type_a_id": 1,\
            "edge_type_a": "PL",\
            "edge_type_b_id": 1,\
            "edge_type_b": "PL",\
            "edge_type_c_id": 1,\
            "edge_type_c": "PL",\
            "edge_type_d_id": 1,\
            "edge_type_d": "PL"\
        \},\
        \{\
            "id": 8,\
            "name": "2-103-1-2",\
            "status": "In Fabrication",\
            "size_type": "oval",\
            "size_a": 300,\
            "fraction_size_a": "",\
            "size_b": 100,\
            "fraction_size_b": "",\
            "edge_type_a_id": 1,\
            "edge_type_a": "PL",\
            "edge_type_b_id": 1,\
            "edge_type_b": "PL",\
            "edge_type_c_id": 1,\
            "edge_type_c": "PL",\
            "edge_type_d_id": 1,\
            "edge_type_d": "PL"\
        \},\
        \{\
            "id": 9,\
            "name": "2-103-1-3",\
            "status": "In Fabrication",\
            "size_type": null,\
            "size_a": null,\
            "fraction_size_a": null,\
            "size_b": null,\
            "fraction_size_b": null,\
            "edge_type_a_id": null,\
            "edge_type_a": "",\
            "edge_type_b_id": null,\
            "edge_type_b": "",\
            "edge_type_c_id": null,\
            "edge_type_c": "",\
            "edge_type_d_id": null,\
            "edge_type_d": ""\
        \}\
    ]\
\}\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 13. Material status available API
\b0 \uc0\u8232 \u8232 Request :\
\
GET /product_sections/available_material_statuses.json\
\
Params\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
\
Response : \
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": [\u8232     "In Fabrication",\u8232     "Ordered",\u8232     "Installed"\u8232   ]\u8232 \}\
\
\

\b 14 Material status update API\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 It\'92s basically same with API NO 2 Update product statuses\
Request :\
PUT /product_sections/\{id\}.json\
\uc0\u8232 Params : \
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- product_section : \
\pard\pardeftab720\fi720\ri0\sl276\slmult1\partightenfactor0
\cf0 status : status material, \
size_type: oval / box\
size_a : width of material, \
fraction_size_a: fraction for width material\
size_b: height of material\
fraction_size_b : fraction for height material\
edge_type_a_id: edge type for top\
edge_type_b_id: edge type for right\
edge_type_c_id: edge type for bottom\
edge_type_d_id: edge type for left\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 availabl fraction type :  ["1/2","1/4","1/8","1/16","3/4","3/8","3/16","5/8","5/16","7/8","7/16","9/16","11/16","13/16","15/16"]\
available edge type id refer to no 22\
\
\{\
  "access_id": \{\{access_id\}\},\
  "access_token": "\{\{access_token\}\}",\
  "product_section": \{\
  	"status": "To Temper",\
  	"size_a": "1",\
	\'93size_type\'94: \'93box\'94,\
  	"fraction_size_a": "1/2",\
  	"size_b": "1",\
  	"fraction_size_b": "1/2",\
  	"edge_type_a_id": "1",\
  	"edge_type_b_id": "2",\
  	"edge_type_c_id": "2",\
  	"edge_type_d_id": "2"\
  \}\
\}\
\
Response : \
\{\
    "status": "success",\
    "message": null,\
    "data": \{\
        "id": 84,\
        "name": "12-101-33-3",\
        "status": "To Temper",\
        "size_a": 1,\
        "fraction_size_a": "",\
        "size_b": 1,\
        "fraction_size_b": "",\
        "edge_type_a_id": 1,\
        "edge_type_a": "PL",\
        "edge_type_b": "BV",\
        "edge_type_b_id": 2,\
        "edge_type_c": "BV",\
        "edge_type_c_id": 2,\
        "edge_type_d": "BV",\
        "edge_type_d_id": 2\
    \}\
\}\
Failed :\
\{\
    "status": "failed",\
    "message": "Status Size and Edge types must be entered before the material to be tempered. Size a must be greater than or equal to 1 Fraction size b Fraction size type B is not valid.",\
    "data": \{\
        "status": [\
            "Size and Edge types must be entered before the material to be tempered."\
        ],\
        "size_a": [\
            "must be greater than or equal to 1"\
        ],\
        "fraction_size_b": [\
            "Fraction size type B is not valid."\
        ]\
    \}\
\}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 15 Get all data from active job API
\b0 \

\b \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 The primary purpose of this API is to accomodate search functionality on mobile app\
\
Request :\
\
GET /jobs/all_active_data.json\
\
Params\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
\
Response :\
\
Notes : \
\
- category consists of type of data namely material, tasks, room and address\
- id is depending on category, if category is material, it means that id is material id\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": [\u8232     \{\u8232       "category": "material",\u8232       "id": 157,\u8232       "name": "1-101-1A",\u8232       "status": "Ordered"\u8232     \},\u8232     \{\u8232       "category": "material",\u8232       "id": 158,\u8232       "name": "1-101-1B",\u8232       "status": "In Fabrication"\u8232     \},\u8232     \{\u8232       "category": "material",\u8232       "id": 159,\u8232       "name": "1-101-2A",\u8232       "status": "In Fabrication"\u8232     \},\u8232     \{\u8232       "category": "material",\u8232       "id": 166,\u8232       "name": "2-21-1A",\u8232       "status": "In Fabrication"\u8232     \},\u8232     \{\u8232       "category": "material",\u8232       "id": 167,\u8232       "name": "2-21-1B",\u8232       "status": "In Fabrication"\u8232     \},\u8232     \{\u8232       "category": "material",\u8232       "id": 168,\u8232       "name": "2-21-1C",\u8232       "status": "In Fabrication"\u8232     \},\u8232     \{\u8232       "category": "material",\u8232       "id": 169,\u8232       "name": "2-21-1D",\u8232       "status": "In Fabrication"\u8232     \},\u8232     \{\u8232       "category": "material",\u8232       "id": 170,\u8232       "name": "2-21-1E",\u8232       "status": "In Fabrication"\u8232     \},\u8232     \{\u8232       "category": "task",\u8232       "id": 64,\u8232       "name": "black mirror",\u8232       "status": "Prepared"\u8232     \},\u8232     \{\u8232       "category": "task",\u8232       "id": 65,\u8232       "name": "round table",\u8232       "status": "Measured"\u8232     \},\u8232     \{\u8232       "category": "task",\u8232       "id": 69,\u8232       "name": "new mirror",\u8232       "status": "Measured"\u8232     \},\u8232     \{\u8232       "category": "room",\u8232       "id": 32,\u8232       "name": "101",\u8232       "status": "Inactive"\u8232     \},\u8232     \{\u8232       "category": "room",\u8232       "id": 35,\u8232       "name": "21",\u8232       "status": "Active"\u8232     \},\u8232     \{\u8232       "category": "address",\u8232       "id": 1,\u8232       "name": "Redmond Way, Redmond, WA, USA",\u8232       "status": "In Progress"\u8232     \},\u8232     \{\u8232       "category": "address",\u8232       "id": 2,\u8232       "name": "Avenue U, Brooklyn, NY, USA",\u8232       "status": "In Progress"\u8232     \}\u8232   ]\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 15. Job list API\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
Request\
\
GET /jobs/active_list.json\
\
params \
\uc0\u8232 As usual access id and access token are mandatory\
\
Response\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": [\u8232     \{\u8232       "id": 1,\u8232       "name": "(1) Avenue U, Brooklyn, NY, USA"\u8232     \},\u8232     \{\u8232       "id": 2,\u8232       "name": "(2) Denpat Ct, Annandale, VA 22003, USA"\u8232     \}\u8232   ]\u8232 \}\
\
\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 16. Dashboard API\uc0\u8232 \u8232 
\b0 Request\uc0\u8232 \u8232 GET /dashboard.json\u8232 \
params \
\uc0\u8232 As usual access id and access token are mandatory\
job_id : job id (can be empty), it is required to get statuses for certain job, if it\'92s empty it will pull data from all active jobs instead, this job id value can be obtained from Job list API (15)\
\
Response\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "materials": \{\u8232       "FINISHED": 5,\u8232       "In Fabrication": 3,\
      \'93@skyland\'94: 3\uc0\u8232     \},\u8232     "jobs": \{\u8232       "Estimate": 2\u8232     \},\u8232     "fabrication_orders": \{\u8232       "In Progress": 2\u8232     \},\u8232     "rooms": \{\u8232       "Active": 1,\u8232       "FINISHED": 1\u8232     \},\u8232     "tasks": \{\u8232       "FINISHED": 2,\u8232       "Measured": 1\u8232     \}\u8232   \}\u8232 \}\
\
\

\b 17 Dashboard Detail API\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Request : GET /dashboard/detail.json\
\
Params :\
\
as usual access id and access token are mandatory\
category : type of data, the values could be \'93materials\'94, fabrication_orders\'94,\'94rooms\'94 etc as you see from dashboard API \
status : material status name that you get from dashboard API\
job_id : job id (can be empty), it is required to get statuses for certain job, if it\'92s empty it will pull data from all active jobs instead\
\
Response :\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "material_statuses": [\u8232       \{\u8232         "id": 48,\u8232         "name": "1-104-2B",\u8232         "status": "In Fabrication",\u8232         "address": "Atlantic Ave & Flatbush Ave, Brooklyn, NY 11217, USA"\u8232       \},\u8232       \{\u8232         "id": 46,\u8232         "name": "1-103-2B",\u8232         "status": "In Fabrication",\u8232         "address": "Atlantic Ave & Flatbush Ave, Brooklyn, NY 11217, USA"\u8232       \}\u8232     ],\u8232     "available_statuses": [\u8232       "In Fabrication",\u8232       "@ Skyland",\u8232       "Ordered",\u8232       "Installed",\u8232       "N\\/A",\u8232       "FINISHED"\u8232     ]\u8232   \}\u8232 \}\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 18 Dashboard Detail Material API (defunct)\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
GET /dashboard/sections_detail.json\
\
Params\
\
As usual access id and access token are mandatory\uc0\u8232 Status : material status name that you get from dashboard API\
\
Response\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "material_statuses": [\u8232       \{\u8232         "id": 170,\u8232         "name": "2-21-1E",\u8232         "status": "@skyland",\u8232         "address": "Avenue U, Brooklyn, NY, USA"\u8232       \}\u8232     ],\u8232     "available_statuses": [\u8232       "In Fabrication",\u8232       "Ordered",\u8232       "Installed",\u8232       "@skyland"\u8232     ]\u8232   \}\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 19 Dashboard Detail Fabrication Order API (defunct)\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
GET /dashboard/forders_detail.json\
\
Params\
\
As usual access id and access token are mandatory\uc0\u8232 Status : fabrication order status name that you get from dashboard API\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "fabrication_order_statuses": [\u8232       \{\u8232         "id": 2,\u8232         "address": "Avenue U, Brooklyn, NY, USA",\u8232         "status": "In Progress"\u8232       \},\u8232       \{\u8232         "id": 1,\u8232         "address": "Redmond Way, Redmond, WA, USA",\u8232         "status": "In Progress"\u8232       \}\u8232     ],\u8232     "available_statuses": [\u8232       "In Progress",\u8232       "GO AHEAD"\u8232     ]\u8232   \}\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 20 Dashboard Detail Job API (defunct)\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
GET /dashboard/jobs_detail.json\
\
Params\
\
As usual access id and access token are mandatory\uc0\u8232 Status : job status name that you get from dashboard API\
\
\{\uc0\u8232   "status": "success",\u8232   "message": null,\u8232   "data": \{\u8232     "job_statuses": [\u8232       \{\u8232         "id": 2,\u8232         "customer": "Satya Nadella - Microsoft",\u8232         "address": "Avenue U, Brooklyn, NY, USA",\u8232         "status": "Estimate"\u8232       \},\u8232       \{\u8232         "id": 1,\u8232         "customer": "Satya Nadella - Microsoft",\u8232         "address": "Redmond Way, Redmond, WA, USA",\u8232         "status": "Estimate"\u8232       \}\u8232     ],\u8232     "available_statuses": [\u8232       "Estimate",\u8232       "Measure",\u8232       "To Bill"\u8232     ]\u8232   \}\u8232 \}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 21. Multiple update status\
\
PUT 
\f1\b0 /dashboard/status_multiple_update.json\
\
Params\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\f0 \cf0 As usual access id and access token are mandatory\
\
category : type of data, the values could be \'93material\'94,\'94job\'94,\'94fabrication_order\'94,\'94task\'94 and \'93room\'94\
orig_status : original status before update\
new_statuses : array of data that need to be updated, in the form the format look below\
\
new_statuses[34] = \'93installed\'94\
new_statuses[56] = \'93measured\'94\
new_statuses[57] = \'93prepared\'94 \
\
and so on\
\uc0\u8232 the number inside the bracket is id, if category is material, it means material id\
\
Response : \
\
 "status": "success",\uc0\u8232   "message": "Material statuses were successfully updated",\u8232   "data": \{\u8232     "category": "material",\u8232     "updated_data": [\u8232       \{\u8232         "id": 167,\u8232         "name": "2-21-1B",\u8232         "status": "Installed"\u8232       \},\u8232       \{\u8232         "id": 168,\u8232         "name": "2-21-1C",\u8232         "status": "@skyland"\u8232       \}\u8232     ]\u8232   \}\u8232 \}\
\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 22. Edge Type List API\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Get list of available edge type for product section\
\
Request : \
\
GET /edge_types/available_types.json\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
\
Response : \
\
\{\
    "status": "success",\
    "message": null,\
    "data": [\
        \{\
            "id": 1,\
            "name": "PL",\
            "created_at": "2017-12-14T05:06:42.000-05:00",\
            "updated_at": "2017-12-14T05:06:42.000-05:00"\
        \},\
        \{\
            "id": 2,\
            "name": "BV",\
            "created_at": "2017-12-14T05:06:42.000-05:00",\
            "updated_at": "2017-12-14T05:06:42.000-05:00"\
        \},\
        \{\
            "id": 3,\
            "name": "PL45",\
            "created_at": "2017-12-14T05:06:42.000-05:00",\
            "updated_at": "2017-12-14T05:06:42.000-05:00"\
        \}\
    ]\
\}\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 23. Prepare Notification\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 Get Notifications for device ios / android\
\
Request : \
\
POST /notifications.json\
\
- access_id : user getting this value while logged in\uc0\u8232 - access_token : user getting this value while logged in\
- device_type: string, required field, fill with (\'93ios\'94 or \'93android\'94)\
- device_token : the value comes from firebase cloud\
\
Response : \
\
\{\
    "status": "success",\
    "message": null,\
    "data": \{\
        "id": 1,\
        "email": "admin@admin.com",\
        "first_name": "Kevin",\
        "last_name": "Admin",\
        "device_type": "ios\'94,\
       \'93device_token\'94: \'93ksldlaksdsajkda\'94\
    \}\
\}\
\
Failed Response :\
\{\
    "status": "failed",\
    "message": "Device type Size Type not valid.",\
    "data": null\
\}\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
\
\
\
\
\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
\
\
\
\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b \cf0 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\b0 \cf0 \
\
\
\
\
\
\
\
\
\uc0\u8232 \
\
}